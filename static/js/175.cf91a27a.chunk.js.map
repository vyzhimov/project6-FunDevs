{"version":3,"file":"static/js/175.cf91a27a.chunk.js","mappings":"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","sources":["webpack://project6fundevs/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.jsx","webpack://project6fundevs/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","webpack://project6fundevs/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://project6fundevs/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Section/Section.jsx","pages/LoginPage/LoginPage.jsx","validation/authValidation.js","webpack://project6fundevs/./src/components/Section/Section.module.css?dbe8"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__N+Fyz\",\"register\":\"AuthForm_register__LBbT3\",\"login\":\"AuthForm_login__nxTrt\",\"inputContainer\":\"AuthForm_inputContainer__44gmQ\",\"title\":\"AuthForm_title__nrVeh\",\"inputWrap\":\"AuthForm_inputWrap__t4Enc\",\"input\":\"AuthForm_input__dB7h2\",\"successInput\":\"AuthForm_successInput__oQ9qy\",\"errorInput\":\"AuthForm_errorInput__Pe3yE\",\"errorWrap\":\"AuthForm_errorWrap__0TYvv\",\"successMessage\":\"AuthForm_successMessage__Vl8si\",\"btnContainer\":\"AuthForm_btnContainer__hf1ao\",\"button\":\"AuthForm_button__+RFEI\",\"text\":\"AuthForm_text__iaP49\",\"link\":\"AuthForm_link__3I+HY\",\"eyeBtn\":\"AuthForm_eyeBtn__6eQZ4\",\"eyeIcon\":\"AuthForm_eyeIcon__4MRzf\",\"crossIcon\":\"AuthForm_crossIcon__ZrnyS\",\"confirmIcon\":\"AuthForm_confirmIcon__GT3ef\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nimport Button from 'components/Button/Button';\n\nimport {\n  registrationValidationSchema,\n  loginValidationSchema,\n} from './../../validation/authValidation';\n\nimport { GoEyeClosed } from 'react-icons/go';\nimport { GoEye } from 'react-icons/go';\nimport { RxCross2 } from 'react-icons/rx';\nimport { BsCheck } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport css from './AuthForm.module.css';\n\nconst AuthForm = ({ isRegister, onSubmit }) => {\n  const validationSchema = isRegister\n    ? registrationValidationSchema\n    : loginValidationSchema;\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [passworConfirmdVisible, setPasswordConfirmVisible] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const togglePasswordConfirmVisibility = () => {\n    setPasswordConfirmVisible(!passworConfirmdVisible);\n  };\n\n  const clearInput = (fieldName, setFieldValue) => {\n    setFieldValue(fieldName, '');\n  };\n\n  const hasFieldError = (errors, fieldName) => errors[fieldName];\n  const isFieldValid = (errors, fieldName) => !errors[fieldName];\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        confirmPassword: '',\n        ...(isRegister && { name: '' }),\n      }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { setSubmitting }) => {\n        try {\n          await onSubmit(values, { setSubmitting });\n          if (!isRegister) {\n            \n          }\n        } catch (error) {\n          toast.error('Login failed. Please check your email and password.'); // Показуємо повідомлення про неуспішний вхід\n        }\n      }}\n    >\n      {({ isSubmitting, errors, touched, setFieldValue }) => (\n        <Form\n          className={`${css.form} ${isRegister ? css.register : css.login}`}\n        >\n          <div className={css.inputContainer}>\n            {isRegister ? (\n              <h2 className={css.title}>Registration</h2>\n            ) : (\n              <h2 className={css.title}>Login</h2>\n            )}\n            {isRegister && (\n              <div className={css.inputWrap}>\n                <label htmlFor=\"name\" hidden>\n                  Name\n                </label>\n                <Field\n                  id=\"name\"\n                  type=\"name\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  className={`${css.input} ${\n                    touched.name && errors.name && css.errorInput\n                  }`}\n                />\n                {touched.name && hasFieldError(errors, 'name') && (\n                  <RxCross2\n                    id=\"svg\"\n                    className={css.crossIcon}\n                    onClick={() => clearInput('name', setFieldValue)}\n                  />\n                )}\n                {touched.name && isFieldValid(errors, 'name') && (\n                  <BsCheck id=\"svg\" className={css.confirmIcon} />\n                )}\n              </div>\n            )}\n            {touched.name && !errors.name ? (\n              <div className={css.successMessage}>Name is secure</div>\n            ) : (\n              <div className={css.errorWrap}>\n                <ErrorMessage\n                  name=\"name\"\n                  component=\"div\"\n                  className={css.error}\n                />\n              </div>\n            )}\n            <div className={css.inputWrap}>\n              <label htmlFor=\"email\" hidden>\n                Email\n              </label>\n              <Field\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                className={`${css.input} ${\n                  touched.email && errors.email && css.errorInput\n                }`}\n              />\n              {touched.email && hasFieldError(errors, 'email') && (\n                <RxCross2\n                  id=\"svg\"\n                  className={css.crossIcon}\n                  onClick={() => clearInput('email', setFieldValue)}\n                />\n              )}\n              {touched.email && isFieldValid(errors, 'email') && (\n                <BsCheck id=\"svg\" className={css.confirmIcon} />\n              )}\n            </div>\n            {touched.email && !errors.email ? (\n              <div className={css.successMessage}>Email is secure</div>\n            ) : (\n              <div className={css.errorWrap}>\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className={css.error}\n                />\n              </div>\n            )}\n\n            <div className={css.inputWrap}>\n              <label htmlFor=\"password\" hidden>\n                Password\n              </label>\n              <Field\n                id=\"password\"\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Password\"\n                className={`${css.input} ${\n                  touched.password && !errors.password && css.successInput\n                } ${touched.password && errors.password && css.errorInput}`}\n              />\n              {passwordVisible ? (\n                <button\n                  type=\"button\"\n                  onClick={togglePasswordVisibility}\n                  className={css.eyeBtn}\n                >\n                  <GoEye id=\"svg\" className={css.eyeIcon} />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={togglePasswordVisibility}\n                  className={css.eyeBtn}\n                >\n                  <GoEyeClosed id=\"svg\" className={css.eyeIcon} />\n                </button>\n              )}\n              {touched.password && !errors.password ? (\n                <div className={css.successMessage}>Password is secure</div>\n              ) : (\n                <div className={css.errorWrap}>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.error}\n                  />\n                </div>\n              )}\n            </div>\n            {isRegister && (\n              <div className={css.inputWrap}>\n                <label htmlFor=\"confirmPassword\" hidden>\n                  Confirm password\n                </label>\n                <Field\n                  id=\"confirmPassword\"\n                  type={passworConfirmdVisible ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  className={`${css.input} ${\n                    touched.confirmPassword &&\n                    !errors.confirmPassword &&\n                    css.successInput\n                  } ${\n                    touched.confirmPassword &&\n                    errors.confirmPassword &&\n                    css.errorInput\n                  }`}\n                />\n                {passworConfirmdVisible ? (\n                  <button\n                    type=\"button\"\n                    onClick={togglePasswordConfirmVisibility}\n                    className={css.eyeBtn}\n                  >\n                    <GoEye id=\"svg\" className={css.eyeIcon} />\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    onClick={togglePasswordConfirmVisibility}\n                    className={css.eyeBtn}\n                  >\n                    <GoEyeClosed id=\"svg\" className={css.eyeIcon} />\n                  </button>\n                )}\n                {touched.confirmPassword && !errors.confirmPassword ? (\n                  <div className={css.successMessage}>Password confirmed</div>\n                ) : (\n                  <div className={css.errorWrap}>\n                    <ErrorMessage\n                      name=\"confirmPassword\"\n                      component=\"div\"\n                      className={css.error}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          <div className={css.btnContainer}>\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={css.button}\n            >\n              {isRegister ? 'Registration' : 'Login'}\n            </Button>\n            {isRegister ? (\n              <p className={css.text}>\n                Already have an account?{' '}\n                <Link to=\"/login\" className={css.link}>\n                  Login\n                </Link>\n              </p>\n            ) : (\n              <p className={css.text}>\n                Don't have an account?{' '}\n                <Link to=\"/register\" className={css.link}>\n                  Register\n                </Link>\n              </p>\n            )}\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__WcKDH\"};","import React from 'react';\n\nimport css from './Background.module.css';\n\nconst Background = () => {\n  return <div className={css.background}></div>;\n};\n\nexport default Background;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import React from 'react';\n\nimport css from './Button.module.css';\n\nconst Button = ({ children, className, onClick, type, ...props }) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={`${css.button} ${className} `}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import { PropTypes } from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children, className }) => {\n  return <div className={`${css.container} ${className}`}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { PropTypes } from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ children, className }) => {\n  return <div className={`${css.section} ${className}`}>{children}</div>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Background from 'components/Background/Background';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container/Container';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { login } from 'redux/auth/auth-operations';\nimport { useNavigate } from 'react-router-dom';\nimport { isUserLogin, isLoading, checkError } from 'redux/auth/auth-selectors';\nimport Loader from 'components/Loader/Loader';\n\n\nimport css from '../../components/Section/Section.module.css';\n\nexport const LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const error = useSelector(checkError);\n  const loading = useSelector(isLoading);\n\n  const handleLogin = async ({ email, password }, { setSubmitting }) => {\n    const data = { email, password };\n    try {\n      dispatch(login(data));\n    } catch (error) {\n      toast.error('Login failed. Please check your email and password.');\n    }\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (isLogin) {\n      toast.success('Login successful!');\n      navigate('/user', { state: { from: '/login' } });\n    }\n  }, [isLogin, navigate]);\n\n  if (loading && !error) {\n    return <Loader />;\n  }\n\n  return (\n    <Section className={css.sectionlogin}>\n      <Background />\n      <Container>\n        <AuthForm onSubmit={handleLogin} />\n      </Container>\n      <ToastContainer // Додано ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"colored\"\n      />\n    </Section>\n  );\n};\n\nexport default LoginPage;\n","import * as Yup from 'yup';\n\nexport const registrationValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be no more than 16 characters')\n    .matches(/^[A-Za-z]+$/, 'Name must contain only letters'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be no more than 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n  confirmPassword: Yup.string()\n    .nullable()\n    .when('password', (password, schema) => {\n      return password\n        ? schema\n            .required('Password confirmation required')\n            .oneOf([Yup.ref('password')], 'Passwords must match')\n        : schema.notRequired();\n    }),\n});\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"sectionlogin\":\"Section_sectionlogin__Bu46X\",\"sectionRegister\":\"Section_sectionRegister__aDA4N\"};"],"names":["_ref","isRegister","onSubmit","validationSchema","registrationValidationSchema","loginValidationSchema","_useState","useState","_useState2","_slicedToArray","passwordVisible","setPasswordVisible","_useState3","_useState4","passworConfirmdVisible","setPasswordConfirmVisible","togglePasswordVisibility","togglePasswordConfirmVisibility","clearInput","fieldName","setFieldValue","hasFieldError","errors","isFieldValid","_jsx","Formik","initialValues","_objectSpread","email","password","confirmPassword","name","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref2","setSubmitting","wrap","_context","prev","next","t0","toast","stop","_x","_x2","apply","arguments","children","_ref4","isSubmitting","touched","_jsxs","Form","className","concat","css","htmlFor","hidden","Field","id","type","placeholder","RxCross2","onClick","BsCheck","ErrorMessage","component","GoEye","GoEyeClosed","Button","disabled","Link","to","_objectWithoutProperties","_excluded","isLogin","useSelector","isUserLogin","navigate","useNavigate","dispatch","useDispatch","error","checkError","loading","isLoading","handleLogin","data","login","useEffect","state","from","Loader","Section","Background","Container","AuthForm","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Yup","shape","nullable","required","min","max","matches","when","schema","oneOf","notRequired"],"sourceRoot":""}